<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Istio on Cloud Native</title>
    <link>https://www6v.github.io/www6vCloudNative/tags/istio/</link>
    <description>Recent content in Istio on Cloud Native</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 15 Apr 2023 09:59:36 +0000</lastBuildDate>
    <atom:link href="https://www6v.github.io/www6vCloudNative/tags/istio/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SpringCloud迁移到istio</title>
      <link>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%AE%9E%E8%B7%B5/%E9%9B%86%E6%88%90/istioMigrateFromSpringCloud/</link>
      <pubDate>Thu, 06 Jan 2022 21:50:32 +0000</pubDate>
      <guid>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%AE%9E%E8%B7%B5/%E9%9B%86%E6%88%90/istioMigrateFromSpringCloud/</guid>
      <description>&#xA;Java方案-mesh开关[3] # Java Agent + mesh开关 # pod不需要重新注入sidecar, 通过 mesh-switcher开关来修改iptables，达到服务直连或者mesh的效果。 非Java方案-基于Proxy[1] # 流量互通方案 # 当目标服务不在 mesh 内，Discovery 服务返回的地址是服务的 HAProxy 的地址（也就是将流量代理到 consul）。&#xA;当目标服务再 mesh 内，Discovery 服务将返回服务的 ServiceIP，此时应用将通过 Sidecar 触发 ServiceMesh 的路由能力,将请求直接传递到对端 Sidecar。&#xA;参考 # istio 在知乎大规模集群的落地实践 ***&#xA;迁移-回滚 限流 平台化，优化-性能，坑 SpringCloud微服务Istio迁移指导 * 百度服务网格在金融行业的大规模落地实践（孙召昌，百度） ***&#xA;相关ppt 基于OpenShift Service Mesh 实现微服务网格化 林斯锐 中国DevOps社区 51 | Spring Cloud、K8s和Istio该如何集成？ 有个图 </description>
    </item>
    <item>
      <title>istio数据平面-sidecar</title>
      <link>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%8E%9F%E7%90%86/%E6%95%B0%E6%8D%AE%E9%9D%A2/istioDataplane/</link>
      <pubDate>Thu, 21 Nov 2019 17:05:08 +0000</pubDate>
      <guid>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%8E%9F%E7%90%86/%E6%95%B0%E6%8D%AE%E9%9D%A2/istioDataplane/</guid>
      <description>sidecar注入和路由转发 # sidecar注入 # Envoy Sidecar 代理的路由转发 [7][8] # Envoy Sidecar 代理的路由转发&#xA;参考:&#xA;7. 理解 Istio Service Mesh 中 Envoy 代理 Sidecar 注入及流量劫持 宋净超&#xA;8. 理解 Istio Service Mesh 中 Envoy Sidecar 代理的路由转发 宋净超 引&#xA;21. 《云原生服务网格Istio：原理、实践、架构与源码解析》 第6章&#xA;22. Istio Sidecar 注入过程解密 istio官方&#xA;Envoy proxy的架构 [18] # Envoy proxy的架构&#xA;参考:&#xA;18. Istio 的数据平面 Envoy Proxy 配置详解 宋净超 引&#xA;Istio流量管理实现机制深度解析 赵化冰 数据面标准API/xDS协议 # pilot和envoy之间的接口 xDS是一类发现服务的总称，包含LDS，RDS，CDS，EDS以及 SDS。 XDS服务接口的最终一致性: 遵循 make before break 模型 参考:</description>
    </item>
    <item>
      <title>istio</title>
      <link>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%8E%9F%E7%90%86/istio/</link>
      <pubDate>Tue, 02 Jul 2019 10:44:03 +0000</pubDate>
      <guid>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%8E%9F%E7%90%86/istio/</guid>
      <description>为什么用istio # k8s和istio的比较 [3]&#xA;k8s的service比较弱，负载均衡基于dns和iptables。&#xA;需要用户态应用层的负载均衡能力，是istio等mesh项目的驱动力。&#xA;SDK与istio比较 [1]&#xA;SDK思维向平台思维转变&#xA;SDK的功能下沉到平台中， SDK中保留必要的功能&#xA;参考：&#xA;《阿里云云原生架构实践》 基于OpenShift Service Mesh 实现微服务网格化 林斯锐 中国DevOps社区 12丨模块十二：基于Istio的高级流量管理 istio Overview [1] # istio特性 # 性能优化: 1.精简层： sofa-mosn 在sidercar里做很多mixer的事情 2.优化层： Cilium： 优化sider的网络 参考:&#xA;20. Istio 安装 引&#xA;23. Istio 庖丁解牛五：多集群网格实现分析 腾讯云 钟华 引&#xA;istio组件 [5] # istio1.1组件&#xA;istio架构演进 # 1.5版本之后的简化 Simplify&#xA;从 1.5 开始，把控制平面的所有组件组合并成一个单体结构叫 istiod。 istio架构（v1.1-v1.4） [5] # istio架构（v1.5+） # 参考: # 腾讯云容器团队内部Istio专题分享 腾讯云 钟华 一个商用级Service Mesh服务的设计之道 华为 田晓亮 Service Mesh——后 Kubernetes 时代的微服务 宋净超 《云原生服务网格Istio：原理、实践、架构与源码解析》 3.</description>
    </item>
    <item>
      <title>istio 集成 Springcloud</title>
      <link>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%AE%9E%E8%B7%B5/%E9%9B%86%E6%88%90/istioSpringcloud/</link>
      <pubDate>Sat, 15 Apr 2023 09:59:36 +0000</pubDate>
      <guid>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%AE%9E%E8%B7%B5/%E9%9B%86%E6%88%90/istioSpringcloud/</guid>
      <description>&#xA;istio 集成 Springcloud # 选型 # 以istio k8s为主&#xA;架构 # 参考 # 《51丨SpringCloud、K8s和Istio该如何集成？》 分布式系统案例课&#xA;pdf </description>
    </item>
    <item>
      <title>istio常用命令</title>
      <link>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%AE%9E%E8%B7%B5/istioCommand/</link>
      <pubDate>Mon, 15 Jul 2019 11:18:30 +0000</pubDate>
      <guid>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%AE%9E%E8%B7%B5/istioCommand/</guid>
      <description>常用命令 # Envoy的启动信息 $ istioctl proxy-config bootstrap ratings-v1-85858fc49f-89zd5&#xD;{&#xD;&amp;#34;bootstrap&amp;#34;: {&#xD;&amp;#34;node&amp;#34;: {&#xD;...&#xD;},&#xD;&amp;#34;staticResources&amp;#34;: {&#xD;&amp;#34;listeners&amp;#34;: [{&#x9;...&#xD;}],&#xD;&amp;#34;clusters&amp;#34;: [{&#xD;...&#xD;}, ... , ...]&#xD;},&#xD;&amp;#34;dynamicResources&amp;#34;: {&#xD;&amp;#34;ldsConfig&amp;#34;: {&#xD;&amp;#34;ads&amp;#34;: {}&#xD;},&#xD;&amp;#34;cdsConfig&amp;#34;: {&#xD;&amp;#34;ads&amp;#34;: {}&#xD;},&#xD;&amp;#34;adsConfig&amp;#34;: {&#xD;...&#xD;}&#xD;},&#xD;&amp;#34;statsConfig&amp;#34;: {&#x9;...&#xD;},&#xD;&amp;#34;tracing&amp;#34;: {&#xD;...&#xD;},&#xD;&amp;#34;admin&amp;#34;: {&#xD;...&#xD;}&#xD;},&#xD;&amp;#34;lastUpdated&amp;#34;: &amp;#34;2019-07-08T02:44:29.440Z&amp;#34;&#xD;} xDS $ istioctl proxy-config cluster ratings-v1-85858fc49f-89zd5&#xD;$ istioctl proxy-config endpoint reviews-v1-6db46f6486-q7nth&#xD;$ istioctl proxy-config listener reviews-v1-6db46f6486-q7nth&#xD;$ istioctl proxy-config route reviews-v1-6db46f6486-q7nth 其他 # API server准入机制&#xD;$ kubectl get ValidatingWebhookConfiguration -o yaml&#xD;$ kubectl get mutatingwebhookconfiguration istio-sidecar-injector -o yaml # sidecar自动注入&#xD;# kubectl exec Pod名字 -c 容器名字 -- 执行的命令&#xD;$ kubectl exec productpage-v1-8579d7b797-dhj7z -c istio-proxy -- ps -ef&#xD;/usr/local/bin/pilot-agent /usr/local/bin/envoy $ kubectl exec productpage-v1-8579d7b797-dhj7z -c istio-proxy curl http://127.</description>
    </item>
    <item>
      <title>istio安装 &#43; Bookinfo示例</title>
      <link>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%AE%9E%E8%B7%B5/istioSetup-bookinfo/</link>
      <pubDate>Tue, 02 Jul 2019 15:24:50 +0000</pubDate>
      <guid>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%AE%9E%E8%B7%B5/istioSetup-bookinfo/</guid>
      <description>istio安装 # 有以下几种方式安装Istio：&#xA;使用install/kubernetes文件夹中的istio-demo.yaml进行安装； 使用Helm template渲染出Istio的YAML安装文件进行安装； 使用Helm和Tiller方式进行安装。 对于生产环境下或大规模的应用，推荐使用 Helm和 Tiller 方式安装 Istio，这样可以灵活控制Istio的 所有配置项，方便管理各个组件。&#xA;第二种方式安装 #资源准备&#xD;wget https://github.com/istio/istio/releases/download/1.1.1/istio-1.1.1-linux.tar.gz&#xD;tar xvf istio-1.1.1-linux.tar.gz&#xD;#建立namespace&#xD;$ kubectl create namespace istio-system&#xD;#Istio CRD安装&#xD;$ helm template install/kubernetes/helm/istio-init --name istio-init --namespace istio-system | kubectl apply -f -&#xD;#CRD验证&#xD;$ kubectl get crds | grep &amp;#39;istio.io\|certmanager.k8s.io&amp;#39; | wc -l&#xD;53&#xD;#Istio 的核心组件安装&#xD;$ helm template install/kubernetes/helm/istio --name istio --namespace istio-system | kubectl apply -f -&#xD;#验证&#xD;$ kubectl get svc -n istio-system&#xD;$ kubectl get pods -n istio-system 第一种方式安装 # 如果以上安装有问题, 可一键安装istio&#xD;kubectl apply -f install/kubernetes/istio-demo.</description>
    </item>
    <item>
      <title>Istio Service Failover</title>
      <link>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%AE%9E%E8%B7%B5/istioServiceFailover/</link>
      <pubDate>Sun, 06 Feb 2022 15:53:26 +0000</pubDate>
      <guid>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%AE%9E%E8%B7%B5/istioServiceFailover/</guid>
      <description>参考 # 基于云原生技术的服务最大化可用性，白西原（乐天创研）&#xA;ppt在‘云原生社区’的 gitlab中 1xx. Open Source Service Mesh Hub – Technical Overview</description>
    </item>
    <item>
      <title>Istio、Kubernetes和Spring Cloud中服务的比对</title>
      <link>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%8E%9F%E7%90%86/istio-k8s-service/</link>
      <pubDate>Sat, 20 Jul 2019 07:46:52 +0000</pubDate>
      <guid>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%8E%9F%E7%90%86/istio-k8s-service/</guid>
      <description>k8s vs. istio # 特性 k8s-服务编排,资源调度 istio-流量管理 定义 Service&#xA;Deployment&#xA;Endpoint Service&#xA;服务版本 服务实例 入口 NodePort&#xA;LoadBalance&#xA;Ingress Gateway（LoadBalance Service） 出口 Egress ServiceEntry 服务发现 DNS（CoreDNS）&#xA;apiserver + kube-proxy Pilot + Envoy 服务路由 VirtualService 熔断&amp;amp;监控检查 容器：存活探针&#xA;服务：就绪探针 DestinationRule 负载均衡 DestinationRule 生命周期管理&#xA;故障迁移，自愈&#xA;伸缩 原生 基于k8s 有状态调度 StatefulSet Operator（CRD+Controller） 配置管理 ConfigMap &amp;amp; Secrets 灰度 Deployment:滚动升级&#xA;最佳实践：两个Deployment VirtualService 多集群 Federation 1. 多控制面&#xA;2.集群感知单控制面(Split Horizon EDS) spring Cloud vs. spring Cloud alibaba vs. istio # 特性 spring Cloud-服务治理</description>
    </item>
    <item>
      <title>Istio知识图谱</title>
      <link>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%8E%9F%E7%90%86/istioKnowledgeMap/</link>
      <pubDate>Mon, 18 Nov 2019 15:34:18 +0000</pubDate>
      <guid>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%8E%9F%E7%90%86/istioKnowledgeMap/</guid>
      <description>&#xA;Istio知识图谱&#xD;参考: # Istio 知识图谱 Istio V1.0 系列-开源技术 * IBM 微讲堂 video 未&#xA;IBM Istio系列开源技术微讲堂 video 未 Istio v1.6 系列-开源技术 * IBM 微讲堂 video 未 </description>
    </item>
    <item>
      <title>istio 控制面ControlPanel</title>
      <link>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%8E%9F%E7%90%86/%E6%8E%A7%E5%88%B6%E9%9D%A2/istioControlPanel/</link>
      <pubDate>Fri, 14 Jan 2022 16:15:13 +0000</pubDate>
      <guid>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%8E%9F%E7%90%86/%E6%8E%A7%E5%88%B6%E9%9D%A2/istioControlPanel/</guid>
      <description>istio控制面(1.1-1.4) # Pilot # Pilot 组件 Adaptor&#xA;k8s， Mesos Rules API&#xA;DSL 运维人员使用 Envoy API #1 Envoy V2， gRPC协议 xDS，控制面规范 #3 Abstract Model 功能 服务发现、负载均衡 服务可见性【6】 问题： 服务惊群效应 流量管理 【self 1】 Mixer # Mixer Adapter 模型 功能 metrics logs 组件 Handler Instance Rule 功能 遥测 Policy策略 限流策略 有条件的限流 黑白名单 Citadel # Citadel 功能 安全 Galley # Galley 功能&#xA;配置管理 「配置」分发协议(MCP) source sink&#xA;Pilot和Mixer resource&#xA;配置: k8s Resource Definition + istio CRD 功能 # 功能 全局的管理规则 网格内的元数据维护 mixer的三大功能 # 前置条件检查 配额管理 遥测报告 优化 # 默认关闭mixer 1.</description>
    </item>
    <item>
      <title>Istio流量管理</title>
      <link>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%8E%9F%E7%90%86/%E6%8E%A7%E5%88%B6%E9%9D%A2/istioTrafficManagement/</link>
      <pubDate>Thu, 21 Nov 2019 15:59:53 +0000</pubDate>
      <guid>https://www6v.github.io/www6vCloudNative/docs/Service-Mesh/%E5%8E%9F%E7%90%86/%E6%8E%A7%E5%88%B6%E9%9D%A2/istioTrafficManagement/</guid>
      <description>流量管理 # 组件 # Pilot Design Overview (来自 Istio old_pilot_repo)&#xA;图例说明：图中红色的线表示控制流，黑色的线表示数据流。蓝色部分为和Pilot相关的组件。&#xA;控制面组件&#xA;Discovery Services istio crd 数据面组件&#xA;Pilot-agent Envoy Istio 庖丁解牛1：组件概览 腾讯云 钟华&#xA;流量管理模型 # VirtualService&#xA;定义了一系列针对指定服务的流量路由规则;&#xA;将流量路由到给定目标地址;&#xA;通常和目标规则（DestinationRule）成对出现;&#xA;DestinationRule&#xA;定义虚拟服务路由目标地址的真实地址，即子集（subset）；&#xA;设置负载均衡方式： round robin（默认），随机，权重，最少请求数；&#xA;ServiceEntry&#xA;外部服务定义: 把外部服务注册到网格中 功能： 为外部服务转发请求 添加超时重试等策略 扩展网格 Gateway&#xA;描述了一个负载均衡器，用于承载网格边缘的进入和发出连接。&#xA;EnvoyFilter&#xA;描述了针对代理服务的过滤器，用来定制由 Istio Pilot 生成的代理配置.&#xA;Sidecar&#xA;调整Envoy代理接管的端口和协议；&#xA;限制Envoy代理可访问的服务；&#xA;总结&#xA;管理内部流量：VirtualService + DestinationRule&#xA;管理外部流量：Gateway&#xA;管理服务：ServiceEntry&#xA;参考 # Istio流量管理实现机制深度解析 赵化冰 腾讯云容器团队内部Istio专题分享 腾讯云 钟华 极客时间 《Service Mesh实战 - 核心功能之流量控制：Istio是如何实现流量控制功能的？》 马若飞 官方Examples 0-5 G # 流量管理 istio官网 引 配置请求路由 done 流量转移 done TCP 流量转移 done ,验证有点问题 设置请求超时 done 熔断 done 最佳实践 # 流量管理最佳实践</description>
    </item>
  </channel>
</rss>
